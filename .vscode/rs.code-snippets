{
	// Place your bian-rs 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"json response struct": {
		"prefix": "json_resp",
		"body": [
			"#[derive(Debug, Deserialize)]",
			"#[serde(rename_all = \"camelCase\")]",
			"pub struct $1 {",
			"    $2",
			"}"
		]
	},
	"f64_str": {
		"prefix": "f64_str",
		"body": [
			"#[serde(deserialize_with = \"string_as_f64\")]",
			"pub $1: f64,",
			"$2"
		]
	},
	"usize_str": {
		"prefix": "usize_str",
		"body": [
			"#[serde(deserialize_with = \"string_as_usize\")]",
			"pub $1: usize,",
			"$2"
		]
	},
	"json request struct": {
		"prefix": "json_req",
		"body": [
			"#[derive(Debug, Serialize)]",
			"pub struct $1 {",
			"    $2",
			"}"
		]
	},
	"http request fn": {
		"prefix": "req_fn",
		"body": [
			"/// $1",
			"#[api(${2:GET} \"$3\")]",
			"pub async fn $4(&self, $5) -> $6 {}"
		]
	}
}